AWSTemplateFormatVersion: "2010-09-09"

Description: "This template is made for practicing."
Parameters:
  VPCname:
    Type: String
    Default: "VPC with public subnets created with template"
    Description: Name of the current VPC.

Mappings:

  Subnets:
    VPC:
      CIDR: "10.0.0.0/16"
    Public0:
      CIDR: "10.0.0.0/18"
    Public1:
      CIDR: "10.0.64.0/18"
    Public2:
      CIDR: "10.0.128.0/18"


Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock:
        Fn::FindInMap: [ "Subnets", "VPC", "CIDR" ]
      Tags:
        - Key: "Name"
          Value: !Ref "VPCname"

  PublicSubnet0:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock:
        Fn::FindInMap: [ "Subnets", "Public0", "CIDR" ]
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCname"
              - '-public-a'

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock:
        Fn::FindInMap: [ "Subnets", "Public1", "CIDR" ]
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCname"
              - '-public-b'

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      CidrBlock:
        Fn::FindInMap: [ "Subnets", "Public2", "CIDR" ]
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCname"
              - '-public-c'

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCname"
              - '-IGW'

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId:
        Ref: "VPC"
      InternetGatewayId:
        Ref: "InternetGateway"

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCname"
              - '-public-routes'

  DefaultPublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "InternetGatewayAttachment"
    Properties:
      RouteTableId:
        Ref: "PublicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "InternetGateway"

  PublicSubnet0RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet0"
      RouteTableId:
        Ref: "PublicRouteTable"

  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet1"
      RouteTableId:
        Ref: "PublicRouteTable"

  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet2"
      RouteTableId:
        Ref: "PublicRouteTable"

  PublicNetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        - Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCname"
              - '-public-nacl'

  OutboundTrafficNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: "true"
      NetworkAclId:
        Ref: "PublicNetworkAcl"
      PortRange:
        From: "0"
        To: "65535"
      Protocol: "-1"
      RuleAction: "allow"
      RuleNumber: "100"

  InboundTrafficNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: "false"
      NetworkAclId:
        Ref: "PublicNetworkAcl"
      PortRange:
        From: "0"
        To: "65535"
      Protocol: "-1"
      RuleAction: "allow"
      RuleNumber: "100"

  PublicSubnet0NetworkAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet0"
      NetworkAclId:
        Ref: "PublicNetworkAcl"

  PublicSubnet1NetworkAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet1"
      NetworkAclId:
        Ref: "PublicNetworkAcl"

  PublicSubnet2NetworkAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet2"
      NetworkAclId:
        Ref: "PublicNetworkAcl"

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh connections from any IP
      VpcId:
         Ref: "VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

Outputs:

  VPCId:
    Description: "VPCId of VPC"
    Value:
      Ref: "VPC"
